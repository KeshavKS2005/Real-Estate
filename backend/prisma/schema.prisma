// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma" 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  username  String    @unique
  password  String
  avatar    String?
  createdAt DateTime  @default(now())
  posts     Post[]
  savedPosts SavedPost[]
}

model Post{
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  price      Int
  images     String[]
  address    String
  city       String
  bedroom    Int
  bathroom   Int
  type       Type
  property   Property
  createdAt  DateTime   @default(now())
  user       User       @relation(fields: [userId],references:[id])
  userId     String     @db.ObjectId
  postDetail PostDetail?
  savedPosts SavedPost[]
}

enum Type{
  buy
  rent
}

enum Property{
  apartment
  house
  condo
  land
}

model PostDetail{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  pet        String?
  income     Int?
  size       String?
  school     String?
  bus        String?
  restaurant Int?
  post       Post     @relation(fields:[postId],references: [id])
  postId     String   @db.ObjectId @unique
}

model SavedPost{
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    user      User      @relation(fields:[userId],references: [id])
    post      Post      @relation(fields:[postId],references: [id])
    userId    String    @db.ObjectId // Removed @unique here
    postId    String    @db.ObjectId // Removed @unique here
    createdAt DateTime  @default(now())
    @@unique([userId,postId])
}